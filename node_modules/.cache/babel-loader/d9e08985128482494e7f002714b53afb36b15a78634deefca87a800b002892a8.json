{"ast":null,"code":"/*==================================================\r\n/src/store/thunks.js\r\n\r\nIt contains all Thunk Creators and Thunks.\r\n================================================== */\nimport * as ac from './actions/actionCreators'; // Import Action Creators (\"ac\" keyword Action Creator)\nimport axios from 'axios';\n//const axios = require('axios');\n\n//All Campuses\n// THUNK CREATOR:\nexport const fetchAllCampusesThunk = () => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get \"campuses\" data from database\n    let res = await axios.get(`http://localhost:5001/api/campuses`);\n    // Call Action Creator to return Action object (type + payload with \"campuses\" data)\n    // Then dispatch the Action object to Reducer to update state \n    dispatch(ac.fetchAllCampuses(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Single Campus\n// THUNK CREATOR:\nexport const fetchCampusThunk = id => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get a student data (based on \"id\")from database\n    let res = await axios.get(`http://localhost:5001/api/campuses/${id}`);\n    dispatch(ac.fetchCampus(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// All Students\n// THUNK CREATOR:\nexport const fetchAllStudentsThunk = () => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get \"students\" data from database\n    let res = await axios.get(`http://localhost:5001/api/students`);\n    // Call Action Creator to return Action object (type + payload with \"students\" data)\n    // Then dispatch the Action object to Reducer to update state \n    dispatch(ac.fetchAllStudents(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Add Student\n// THUNK CREATOR:\nexport const addStudentThunk = student => async dispatch => {\n  // The THUNK\n  try {\n    // API \"post\" call to add \"student\" object's data to database\n    let res = await axios.post(`http://localhost:5001/api/students`, student);\n    // Call Action Creator to return Action object (type + payload with new students data)\n    // Then dispatch the Action object to Reducer to update state \n    dispatch(ac.addStudent(res.data));\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const addCampusThunk = campus => async dispatch => {\n  try {\n    console.log(campus);\n    let res = await axios.post(`http://localhost:5001/api/campuses`, campus);\n    dispatch(ac.addCampus(res.data));\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Delete Student\n// THUNK CREATOR:\nexport const deleteStudentThunk = studentId => async dispatch => {\n  // The THUNK\n  try {\n    // API \"delete\" call to delete student (based on \"studentID\") from database\n    await axios.delete(`http://localhost:5001/api/students/${studentId}`);\n    // Delete successful so change state with dispatch\n    dispatch(ac.deleteStudent(studentId));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const deleteCampusThunk = campusId => async dispatch => {\n  try {\n    await axios.delete(`http://localhost:5001/api/campuses/${campusId}`);\n    dispatch(ac.deleteCampus(campusId));\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// Edit Student\n// THUNK CREATOR:\nexport const editStudentThunk = student => async dispatch => {\n  // The THUNK\n  try {\n    // API \"put\" call to update student (based on \"id\" and \"student\" object's data) from database\n    let updatedStudent = await axios.put(`http://localhost:5001/api/students/${student.id}`, student);\n    // Update successful so change state with dispatch\n    dispatch(ac.editStudent(updatedStudent));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const editCampusThunk = campus => async dispatch => {\n  try {\n    let updatedCampus = await axios.put(`http://localhost:5001/api/campuses/${campus.id}`, campus);\n    dispatch(ac.editCampus(updatedCampus));\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// Single Student\n// THUNK CREATOR:\nexport const fetchStudentThunk = id => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get a specific student (based on \"id\") data from database\n    let res = await axios.get(`http://localhost:5001/api/students/${id}`);\n    // Call Action Creator to return Action object (type + payload with student data)\n    // Then dispatch the Action object to Reducer to display student data \n    dispatch(ac.fetchStudent(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};","map":{"version":3,"names":["ac","axios","fetchAllCampusesThunk","dispatch","res","get","fetchAllCampuses","data","err","console","error","fetchCampusThunk","id","fetchCampus","fetchAllStudentsThunk","fetchAllStudents","addStudentThunk","student","post","addStudent","addCampusThunk","campus","log","addCampus","deleteStudentThunk","studentId","delete","deleteStudent","deleteCampusThunk","campusId","deleteCampus","editStudentThunk","updatedStudent","put","editStudent","editCampusThunk","updatedCampus","editCampus","fetchStudentThunk","fetchStudent"],"sources":["C:/Users/incre/OneDrive/Documents/Full Stack Project/full-stack-project-frontend/src/store/thunks.js"],"sourcesContent":["/*==================================================\r\n/src/store/thunks.js\r\n\r\nIt contains all Thunk Creators and Thunks.\r\n================================================== */\r\nimport * as ac from './actions/actionCreators';  // Import Action Creators (\"ac\" keyword Action Creator)\r\nimport axios from 'axios';\r\n//const axios = require('axios');\r\n\r\n//All Campuses\r\n// THUNK CREATOR:\r\nexport const fetchAllCampusesThunk = () => async (dispatch) => {  // The THUNK\r\n  try {\r\n    // API \"get\" call to get \"campuses\" data from database\r\n    let res = await axios.get(`http://localhost:5001/api/campuses`);  \r\n    // Call Action Creator to return Action object (type + payload with \"campuses\" data)\r\n    // Then dispatch the Action object to Reducer to update state \r\n    dispatch(ac.fetchAllCampuses(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Single Campus\r\n// THUNK CREATOR:\r\nexport const fetchCampusThunk = (id) => async (dispatch) => {  // The THUNK\r\n  try {\r\n    // API \"get\" call to get a student data (based on \"id\")from database\r\n    let res = await axios.get(`http://localhost:5001/api/campuses/${id}`);  \r\n    dispatch(ac.fetchCampus(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// All Students\r\n// THUNK CREATOR:\r\nexport const fetchAllStudentsThunk = () => async (dispatch) => {  // The THUNK\r\n  try {\r\n    // API \"get\" call to get \"students\" data from database\r\n    let res = await axios.get(`http://localhost:5001/api/students`);  \r\n    // Call Action Creator to return Action object (type + payload with \"students\" data)\r\n    // Then dispatch the Action object to Reducer to update state \r\n    dispatch(ac.fetchAllStudents(res.data));  \r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Add Student\r\n// THUNK CREATOR:\r\nexport const addStudentThunk = (student) => async (dispatch) => {  // The THUNK\r\n  try {\r\n    // API \"post\" call to add \"student\" object's data to database\r\n    let res = await axios.post(`http://localhost:5001/api/students`, student);  \r\n    // Call Action Creator to return Action object (type + payload with new students data)\r\n    // Then dispatch the Action object to Reducer to update state \r\n    dispatch(ac.addStudent(res.data));\r\n    return res.data;\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const addCampusThunk = (campus) => async (dispatch) => {\r\n  try{\r\n    console.log(campus);\r\n    let res = await axios.post(`http://localhost:5001/api/campuses`, campus);\r\n    dispatch(ac.addCampus(res.data));\r\n    return res.data;\r\n  } catch(err){\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Delete Student\r\n// THUNK CREATOR:\r\nexport const deleteStudentThunk = studentId => async dispatch => {  // The THUNK\r\n  try {\r\n    // API \"delete\" call to delete student (based on \"studentID\") from database\r\n    await axios.delete(`http://localhost:5001/api/students/${studentId}`);  \r\n    // Delete successful so change state with dispatch\r\n    dispatch(ac.deleteStudent(studentId));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const deleteCampusThunk = campusId => async dispatch =>{\r\n  try {\r\n    await axios.delete(`http://localhost:5001/api/campuses/${campusId}`);\r\n    dispatch(ac.deleteCampus(campusId));\r\n  } catch(err){\r\n    console.log(err);\r\n  }\r\n}\r\n\r\n// Edit Student\r\n// THUNK CREATOR:\r\nexport const editStudentThunk = student => async dispatch => {  // The THUNK\r\n  try {\r\n    // API \"put\" call to update student (based on \"id\" and \"student\" object's data) from database\r\n    let updatedStudent = await axios.put(`http://localhost:5001/api/students/${student.id}`, student); \r\n    // Update successful so change state with dispatch\r\n    dispatch(ac.editStudent(updatedStudent));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const editCampusThunk = campus => async dispatch => {\r\n  try {\r\n    let updatedCampus = await axios.put(`http://localhost:5001/api/campuses/${campus.id}`, campus);\r\n    dispatch(ac.editCampus(updatedCampus));\r\n  } catch(err){\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// Single Student\r\n// THUNK CREATOR:\r\nexport const fetchStudentThunk = id => async dispatch => {  // The THUNK\r\n  try {\r\n    // API \"get\" call to get a specific student (based on \"id\") data from database\r\n    let res = await axios.get(`http://localhost:5001/api/students/${id}`);  \r\n    // Call Action Creator to return Action object (type + payload with student data)\r\n    // Then dispatch the Action object to Reducer to display student data \r\n    dispatch(ac.fetchStudent(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}