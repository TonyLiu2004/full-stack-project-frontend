{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\incre\\\\OneDrive\\\\Documents\\\\Full Stack Project\\\\full-stack-project-frontend\\\\src\\\\components\\\\containers\\\\EnrollStudentContainer.js\";\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCampusThunk, editStudentThunk, fetchAllStudentsThunk } from '../../store/thunks';\nimport EnrollStudentView from '../views/EnrollStudentView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EnrollStudentContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = student => {\n      const isEnrolled = this.state.enrollStudent.some(s => s.id === student.id);\n      if (isEnrolled) {\n        const updatedEnrollStudent = this.state.enrollStudent.filter(s => s.id !== student.id);\n        this.setState({\n          enrollStudent: updatedEnrollStudent\n        });\n      } else {\n        const updatedEnrollStudent = [...this.state.enrollStudent, student];\n        this.setState({\n          enrollStudent: updatedEnrollStudent\n        });\n      }\n    };\n    this.handleEnroll = async student => {\n      let editedStudent = {\n        firstname: student.firstname,\n        lastname: student.lastname,\n        campusId: this.props.campus.id,\n        campus: this.props.campus.id,\n        id: student.id,\n        email: student.email,\n        gpa: student.gpa,\n        imageUrl: student.imageUrl\n      };\n      await this.props.editStudent(editedStudent);\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      for (let i in Object.keys(this.state.enrollStudent)) {\n        const student = this.state.enrollStudent[i];\n        this.handleEnroll(student);\n      }\n      window.location.href = `/campus/${this.props.campus.id}`;\n    };\n    this.state = {\n      enrollStudent: []\n    };\n  }\n  async componentDidMount() {\n    try {\n      console.log(this.props.match.params.id);\n      this.props.fetchCampus(this.props.match.params.id);\n      await this.props.fetchAllStudents();\n    } catch (error) {\n      console.error(\"Error fetching campuses:\", error);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EnrollStudentView, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        students: this.props.allStudents,\n        campus: this.props.campus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst mapDispatch = dispatch => {\n  return {\n    fetchCampus: id => dispatch(fetchCampusThunk(id)),\n    fetchAllStudents: () => dispatch(fetchAllStudentsThunk()),\n    editStudent: student => dispatch(editStudentThunk(student))\n  };\n};\nconst mapStateToProps = state => ({\n  campus: state.campus,\n  allStudents: state.allStudents\n});\nexport default connect(mapStateToProps, mapDispatch)(EnrollStudentContainer);","map":{"version":3,"names":["Header","Component","connect","fetchCampusThunk","editStudentThunk","fetchAllStudentsThunk","EnrollStudentView","jsxDEV","_jsxDEV","EnrollStudentContainer","constructor","props","handleChange","student","isEnrolled","state","enrollStudent","some","s","id","updatedEnrollStudent","filter","setState","handleEnroll","editedStudent","firstname","lastname","campusId","campus","email","gpa","imageUrl","editStudent","handleSubmit","event","preventDefault","i","Object","keys","window","location","href","componentDidMount","console","log","match","params","fetchCampus","fetchAllStudents","error","render","children","fileName","_jsxFileName","lineNumber","columnNumber","students","allStudents","mapDispatch","dispatch","mapStateToProps"],"sources":["C:/Users/incre/OneDrive/Documents/Full Stack Project/full-stack-project-frontend/src/components/containers/EnrollStudentContainer.js"],"sourcesContent":["import Header from './Header';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCampusThunk, editStudentThunk, fetchAllStudentsThunk } from '../../store/thunks';\r\nimport EnrollStudentView from '../views/EnrollStudentView';\r\nclass EnrollStudentContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            enrollStudent: [],\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        try {\r\n            console.log(this.props.match.params.id);\r\n            this.props.fetchCampus(this.props.match.params.id);\r\n            await this.props.fetchAllStudents();\r\n        } catch (error) {\r\n            console.error(\"Error fetching campuses:\", error);\r\n        }\r\n    }\r\n\r\n    handleChange = (student) => {\r\n        const isEnrolled = this.state.enrollStudent.some((s) => s.id === student.id);\r\n        if(isEnrolled){\r\n            const updatedEnrollStudent = this.state.enrollStudent.filter((s) => s.id !== student.id);\r\n            this.setState({ enrollStudent: updatedEnrollStudent });\r\n        }else{\r\n            const updatedEnrollStudent = [...this.state.enrollStudent, student];\r\n            this.setState({ enrollStudent: updatedEnrollStudent });\r\n        }\r\n    }\r\n\r\n    handleEnroll = async (student) => {\r\n        let editedStudent = {\r\n          firstname: student.firstname,\r\n          lastname: student.lastname,\r\n          campusId: this.props.campus.id,\r\n          campus: this.props.campus.id,\r\n          id: student.id,\r\n          email: student.email,\r\n          gpa: student.gpa,\r\n          imageUrl: student.imageUrl\r\n        };\r\n        await this.props.editStudent(editedStudent);\r\n    }\r\n      \r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        for (let i in Object.keys(this.state.enrollStudent)) {\r\n            const student = this.state.enrollStudent[i];\r\n            this.handleEnroll(student);\r\n        }\r\n        window.location.href = `/campus/${this.props.campus.id}`;\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Header/>\r\n                <EnrollStudentView\r\n                    handleChange = {this.handleChange}\r\n                    handleSubmit = {this.handleSubmit}\r\n                    students = {this.props.allStudents}\r\n                    campus={this.props.campus} \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatch = (dispatch) => {\r\n    return({\r\n        fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\r\n        fetchAllStudents: () => dispatch(fetchAllStudentsThunk()),\r\n        editStudent: (student) => dispatch(editStudentThunk(student)),\r\n\r\n    })\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    campus: state.campus,\r\n    allStudents: state.allStudents,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(EnrollStudentContainer);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}