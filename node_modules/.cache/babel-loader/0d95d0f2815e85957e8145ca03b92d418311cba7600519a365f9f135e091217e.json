{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\incre\\\\OneDrive\\\\Documents\\\\Full Stack Project\\\\full-stack-project-frontend\\\\src\\\\components\\\\containers\\\\EditStudentContainer.js\";\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditStudentView from '../views/EditStudentView';\nimport { editStudentThunk, fetchAllCampusesThunk, fetchStudentThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EditStudentContainer extends Component {\n  constructor(props) {\n    super(props);\n    // Capture input data when it is entered\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault(); // Prevent browser reload/refresh after submit.\n\n      if (this.state.firstname === \"\" || this.state.lastname === \"\") {\n        alert(\"Missing Information\");\n        return;\n      }\n      let student = {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        campusId: this.state.campusId,\n        id: this.state.student.id\n      };\n      console.log(student);\n      let editStudent = await this.props.editStudent(student);\n      this.setState({\n        firstname: \"\",\n        lastname: \"\",\n        campusId: null,\n        id: null,\n        redirect: true,\n        redirectId: editStudent.id\n      });\n    };\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      id: null,\n      campusId: null,\n      redirect: false,\n      redirectId: null\n    };\n  }\n  async componentDidMount() {\n    try {\n      await this.props.fetchAllCampuses();\n      await this.props.fetchStudent(this.props.match.params.id);\n      console.log(this.props);\n    } catch (error) {\n      console.error(\"Error fetching campuses:\", error);\n    }\n  }\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n  render() {\n    // Redirect to student's page after submit\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/student/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }, this);\n    }\n\n    // Display the input form via the corresponding View component\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditStudentView, {\n        student: this.props.student,\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        campuses: this.props.allCampuses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this);\n  }\n}\nconst mapDispatch = dispatch => {\n  return {\n    fetchStudent: id => dispatch(fetchStudentThunk(id)),\n    fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\n    editStudent: student => dispatch(editStudentThunk(student))\n  };\n};\nconst mapState = state => ({\n  allCampuses: state.allCampuses,\n  // Adjust based on your Redux state structure\n  student: state.student\n});\nexport default connect(mapState, mapDispatch)(EditStudentContainer);","map":{"version":3,"names":["Header","Component","connect","Redirect","EditStudentView","editStudentThunk","fetchAllCampusesThunk","fetchStudentThunk","jsxDEV","_jsxDEV","EditStudentContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","state","firstname","lastname","alert","student","campusId","id","console","log","editStudent","redirect","redirectId","componentDidMount","fetchAllCampuses","fetchStudent","match","params","error","componentWillUnmount","render","to","fileName","_jsxFileName","lineNumber","columnNumber","children","campuses","allCampuses","mapDispatch","dispatch","mapState"],"sources":["C:/Users/incre/OneDrive/Documents/Full Stack Project/full-stack-project-frontend/src/components/containers/EditStudentContainer.js"],"sourcesContent":["import Header from './Header';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport EditStudentView from '../views/EditStudentView';\r\nimport { editStudentThunk, fetchAllCampusesThunk, fetchStudentThunk } from '../../store/thunks';\r\n\r\nclass EditStudentContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            firstname: \"\", \r\n            lastname: \"\", \r\n            id: null,\r\n            campusId: null, \r\n            redirect: false, \r\n            redirectId: null,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            await this.props.fetchAllCampuses();\r\n            await this.props.fetchStudent(this.props.match.params.id);\r\n            console.log(this.props);\r\n        } catch (error) {\r\n            console.error(\"Error fetching campuses:\", error);\r\n        }\r\n    }\r\n\r\n    // Capture input data when it is entered\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    handleSubmit = async event => {\r\n        event.preventDefault();  // Prevent browser reload/refresh after submit.\r\n    \r\n        if(this.state.firstname === \"\" || this.state.lastname === \"\") {\r\n          alert(\"Missing Information\");\r\n          return;\r\n        }\r\n    \r\n        let student = {\r\n            firstname: this.state.firstname,\r\n            lastname: this.state.lastname,\r\n            campusId: this.state.campusId,\r\n            id: this.state.student.id\r\n        };\r\n        console.log(student);\r\n\r\n        let editStudent = await this.props.editStudent(student);\r\n\r\n        this.setState({\r\n            firstname: \"\", \r\n            lastname: \"\", \r\n            campusId: null,\r\n            id: null, \r\n            redirect: true, \r\n            redirectId: editStudent.id\r\n        });\r\n    }\r\n    componentWillUnmount() {\r\n        this.setState({redirect: false, redirectId: null});\r\n    }\r\n    render() {\r\n        // Redirect to student's page after submit\r\n        if(this.state.redirect) {\r\n          return (<Redirect to={`/student/${this.state.redirectId}`}/>)\r\n        }\r\n    \r\n        // Display the input form via the corresponding View component\r\n        return (\r\n          <div>\r\n            <Header />\r\n            <EditStudentView \r\n              student = {this.props.student}\r\n              handleChange = {this.handleChange} \r\n              handleSubmit={this.handleSubmit}    \r\n              campuses={this.props.allCampuses} \r\n            />\r\n          </div>          \r\n        );\r\n      }\r\n}\r\n\r\nconst mapDispatch = (dispatch) => {\r\n    return({\r\n        fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\r\n        fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\r\n        editStudent: (student) => dispatch(editStudentThunk(student)),\r\n    })\r\n}\r\n\r\nconst mapState = state => ({\r\n    allCampuses: state.allCampuses, // Adjust based on your Redux state structure\r\n    student: state.student,\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(EditStudentContainer);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}