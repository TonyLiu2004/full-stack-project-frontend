{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\incre\\\\OneDrive\\\\Documents\\\\Full Stack Project\\\\full-stack-project-frontend\\\\src\\\\components\\\\containers\\\\EditStudentContainer.js\";\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditStudentView from '../views/EditStudentView';\nimport { editStudentThunk, fetchAllCampusesThunk, fetchStudentThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EditStudentContainer extends Component {\n  constructor(props) {\n    super(props);\n    // Capture input data when it is entered\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(\"State\");\n      console.log(this.state);\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault(); // Prevent browser reload/refresh after submit.\n\n      if (this.state.firstname === \"\" || this.state.lastname === \"\") {\n        alert(\"Missing Information\");\n        return;\n      }\n      let student = {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        campusId: this.state.campusId,\n        campus: this.props.allCampuses.find(campus => campus.id === this.state.campusId) || {},\n        id: this.props.student.id\n      };\n      let editStudent = await this.props.editStudent(student);\n      console.log(editStudent);\n      this.setState({\n        firstname: \"\",\n        lastname: \"\",\n        campusId: null,\n        campus: null,\n        id: null,\n        redirect: true,\n        redirectId: this.props.student.id\n      });\n    };\n    this.state = {\n      firstname: this.props.student.firstname,\n      lastname: this.props.student.lastname,\n      id: null,\n      campusId: null,\n      campus: null,\n      redirect: false,\n      redirectId: null\n    };\n  }\n  async componentDidMount() {\n    try {\n      await this.props.fetchAllCampuses();\n      await this.props.fetchStudent(this.props.match.params.id);\n      console.log(this.props);\n    } catch (error) {\n      console.error(\"Error fetching campuses:\", error);\n    }\n  }\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n  render() {\n    // Redirect to student's page after submit\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/student/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }, this);\n    }\n\n    // Display the input form via the corresponding View component\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditStudentView, {\n        student: this.props.student,\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        campuses: this.props.allCampuses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this);\n  }\n}\nconst mapDispatch = dispatch => {\n  return {\n    fetchStudent: id => dispatch(fetchStudentThunk(id)),\n    fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\n    editStudent: student => dispatch(editStudentThunk(student))\n  };\n};\nconst mapState = state => ({\n  allCampuses: state.allCampuses,\n  // Adjust based on your Redux state structure\n  student: state.student\n});\nexport default connect(mapState, mapDispatch)(EditStudentContainer);","map":{"version":3,"names":["Header","Component","connect","Redirect","EditStudentView","editStudentThunk","fetchAllCampusesThunk","fetchStudentThunk","jsxDEV","_jsxDEV","EditStudentContainer","constructor","props","handleChange","event","setState","target","name","value","console","log","state","handleSubmit","preventDefault","firstname","lastname","alert","student","campusId","campus","allCampuses","find","id","editStudent","redirect","redirectId","componentDidMount","fetchAllCampuses","fetchStudent","match","params","error","componentWillUnmount","render","to","fileName","_jsxFileName","lineNumber","columnNumber","children","campuses","mapDispatch","dispatch","mapState"],"sources":["C:/Users/incre/OneDrive/Documents/Full Stack Project/full-stack-project-frontend/src/components/containers/EditStudentContainer.js"],"sourcesContent":["import Header from './Header';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport EditStudentView from '../views/EditStudentView';\r\nimport { editStudentThunk, fetchAllCampusesThunk, fetchStudentThunk } from '../../store/thunks';\r\n\r\nclass EditStudentContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            firstname: this.props.student.firstname, \r\n            lastname: this.props.student.lastname, \r\n            id: null,\r\n            campusId: null, \r\n            campus:null,\r\n            redirect: false, \r\n            redirectId: null,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            await this.props.fetchAllCampuses();\r\n            await this.props.fetchStudent(this.props.match.params.id);\r\n            console.log(this.props);\r\n        } catch (error) {\r\n            console.error(\"Error fetching campuses:\", error);\r\n        }\r\n    }\r\n\r\n    // Capture input data when it is entered\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n        console.log(\"State\");\r\n        console.log(this.state);\r\n    }\r\n    handleSubmit = async event => {\r\n        event.preventDefault();  // Prevent browser reload/refresh after submit.\r\n    \r\n        if(this.state.firstname === \"\" || this.state.lastname === \"\") {\r\n          alert(\"Missing Information\");\r\n          return;\r\n        }\r\n        let student = {\r\n            firstname: this.state.firstname,\r\n            lastname: this.state.lastname,\r\n            campusId: this.state.campusId,\r\n            campus: this.props.allCampuses.find(campus => campus.id === this.state.campusId) || {}, \r\n            id: this.props.student.id\r\n        };\r\n\r\n        let editStudent = await this.props.editStudent(student);\r\n        console.log(editStudent);\r\n\r\n        this.setState({\r\n            firstname: \"\", \r\n            lastname: \"\", \r\n            campusId: null,\r\n            campus:null,\r\n            id: null, \r\n            redirect: true, \r\n            redirectId: this.props.student.id\r\n        });\r\n    }\r\n    componentWillUnmount() {\r\n        this.setState({redirect: false, redirectId: null});\r\n    }\r\n    render() {\r\n        // Redirect to student's page after submit\r\n        if(this.state.redirect) {\r\n          return (<Redirect to={`/student/${this.state.redirectId}`}/>)\r\n        }\r\n    \r\n        // Display the input form via the corresponding View component\r\n        return (\r\n          <div>\r\n            <Header />\r\n            <EditStudentView \r\n              student = {this.props.student}\r\n              handleChange = {this.handleChange} \r\n              handleSubmit={this.handleSubmit}    \r\n              campuses={this.props.allCampuses} \r\n            />\r\n          </div>          \r\n        );\r\n      }\r\n}\r\n\r\nconst mapDispatch = (dispatch) => {\r\n    return({\r\n        fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\r\n        fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\r\n        editStudent: (student) => dispatch(editStudentThunk(student)),\r\n    })\r\n}\r\n\r\nconst mapState = state => ({\r\n    allCampuses: state.allCampuses, // Adjust based on your Redux state structure\r\n    student: state.student,\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(EditStudentContainer);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}