{"ast":null,"code":"/*==================================================\r\n/src/store/thunks.js\r\n\r\nIt contains all Thunk Creators and Thunks.\r\n================================================== */\nimport * as ac from './actions/actionCreators'; // Import Action Creators (\"ac\" keyword Action Creator)\nimport axios from 'axios';\n//const axios = require('axios');\n\n//All Campuses\n// THUNK CREATOR:\nexport const fetchAllCampusesThunk = () => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get \"campuses\" data from database\n    axios.get('http://localhost:5001/api/students/').catch(function (error) {\n      console.log(error.toJSON());\n    });\n    let res = await axios.get(`http://localhost:5001/api/campuses`);\n    // Call Action Creator to return Action object (type + payload with \"campuses\" data)\n    // Then dispatch the Action object to Reducer to update state \n    dispatch(ac.fetchAllCampuses(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Single Campus\n// THUNK CREATOR:\nexport const fetchCampusThunk = id => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get a student data (based on \"id\")from database\n    let res = await axios.get(`/api/campuses/${id}`);\n    dispatch(ac.fetchCampus(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// All Students\n// THUNK CREATOR:\nexport const fetchAllStudentsThunk = () => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get \"students\" data from database\n    let res = await axios.get(`/api/students`);\n    // Call Action Creator to return Action object (type + payload with \"students\" data)\n    // Then dispatch the Action object to Reducer to update state \n    dispatch(ac.fetchAllStudents(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Add Student\n// THUNK CREATOR:\nexport const addStudentThunk = student => async dispatch => {\n  // The THUNK\n  try {\n    // API \"post\" call to add \"student\" object's data to database\n    let res = await axios.post(`/api/students`, student);\n    // Call Action Creator to return Action object (type + payload with new students data)\n    // Then dispatch the Action object to Reducer to update state \n    dispatch(ac.addStudent(res.data));\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Delete Student\n// THUNK CREATOR:\nexport const deleteStudentThunk = studentId => async dispatch => {\n  // The THUNK\n  try {\n    // API \"delete\" call to delete student (based on \"studentID\") from database\n    await axios.delete(`/api/students/${studentId}`);\n    // Delete successful so change state with dispatch\n    dispatch(ac.deleteStudent(studentId));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Edit Student\n// THUNK CREATOR:\nexport const editStudentThunk = student => async dispatch => {\n  // The THUNK\n  try {\n    // API \"put\" call to update student (based on \"id\" and \"student\" object's data) from database\n    let updatedStudent = await axios.put(`/api/students/${student.id}`, student);\n    // Update successful so change state with dispatch\n    dispatch(ac.editStudent(updatedStudent));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Single Student\n// THUNK CREATOR:\nexport const fetchStudentThunk = id => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get a specific student (based on \"id\") data from database\n    let res = await axios.get(`/api/students/${id}`);\n    // Call Action Creator to return Action object (type + payload with student data)\n    // Then dispatch the Action object to Reducer to display student data \n    dispatch(ac.fetchStudent(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};","map":{"version":3,"names":["ac","axios","fetchAllCampusesThunk","dispatch","get","catch","error","console","log","toJSON","res","fetchAllCampuses","data","err","fetchCampusThunk","id","fetchCampus","fetchAllStudentsThunk","fetchAllStudents","addStudentThunk","student","post","addStudent","deleteStudentThunk","studentId","delete","deleteStudent","editStudentThunk","updatedStudent","put","editStudent","fetchStudentThunk","fetchStudent"],"sources":["C:/Users/incre/OneDrive/Documents/Full Stack Project/full-stack-project-frontend/src/store/thunks.js"],"sourcesContent":["/*==================================================\r\n/src/store/thunks.js\r\n\r\nIt contains all Thunk Creators and Thunks.\r\n================================================== */\r\nimport * as ac from './actions/actionCreators';  // Import Action Creators (\"ac\" keyword Action Creator)\r\nimport axios from 'axios';\r\n//const axios = require('axios');\r\n\r\n//All Campuses\r\n// THUNK CREATOR:\r\nexport const fetchAllCampusesThunk = () => async (dispatch) => {  // The THUNK\r\n  try {\r\n    // API \"get\" call to get \"campuses\" data from database\r\n    axios.get('http://localhost:5001/api/students/')\r\n  .catch(function (error) {\r\n    console.log(error.toJSON());\r\n  });\r\n    let res = await axios.get(`http://localhost:5001/api/campuses`);  \r\n    // Call Action Creator to return Action object (type + payload with \"campuses\" data)\r\n    // Then dispatch the Action object to Reducer to update state \r\n    dispatch(ac.fetchAllCampuses(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Single Campus\r\n// THUNK CREATOR:\r\nexport const fetchCampusThunk = (id) => async (dispatch) => {  // The THUNK\r\n  try {\r\n    // API \"get\" call to get a student data (based on \"id\")from database\r\n    let res = await axios.get(`/api/campuses/${id}`);  \r\n    dispatch(ac.fetchCampus(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// All Students\r\n// THUNK CREATOR:\r\nexport const fetchAllStudentsThunk = () => async (dispatch) => {  // The THUNK\r\n  try {\r\n    // API \"get\" call to get \"students\" data from database\r\n    let res = await axios.get(`/api/students`);  \r\n    // Call Action Creator to return Action object (type + payload with \"students\" data)\r\n    // Then dispatch the Action object to Reducer to update state \r\n    dispatch(ac.fetchAllStudents(res.data));  \r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Add Student\r\n// THUNK CREATOR:\r\nexport const addStudentThunk = (student) => async (dispatch) => {  // The THUNK\r\n  try {\r\n    // API \"post\" call to add \"student\" object's data to database\r\n    let res = await axios.post(`/api/students`, student);  \r\n    // Call Action Creator to return Action object (type + payload with new students data)\r\n    // Then dispatch the Action object to Reducer to update state \r\n    dispatch(ac.addStudent(res.data));\r\n    return res.data;\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Delete Student\r\n// THUNK CREATOR:\r\nexport const deleteStudentThunk = studentId => async dispatch => {  // The THUNK\r\n  try {\r\n    // API \"delete\" call to delete student (based on \"studentID\") from database\r\n    await axios.delete(`/api/students/${studentId}`);  \r\n    // Delete successful so change state with dispatch\r\n    dispatch(ac.deleteStudent(studentId));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Edit Student\r\n// THUNK CREATOR:\r\nexport const editStudentThunk = student => async dispatch => {  // The THUNK\r\n  try {\r\n    // API \"put\" call to update student (based on \"id\" and \"student\" object's data) from database\r\n    let updatedStudent = await axios.put(`/api/students/${student.id}`, student); \r\n    // Update successful so change state with dispatch\r\n    dispatch(ac.editStudent(updatedStudent));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Single Student\r\n// THUNK CREATOR:\r\nexport const fetchStudentThunk = id => async dispatch => {  // The THUNK\r\n  try {\r\n    // API \"get\" call to get a specific student (based on \"id\") data from database\r\n    let res = await axios.get(`/api/students/${id}`);  \r\n    // Call Action Creator to return Action object (type + payload with student data)\r\n    // Then dispatch the Action object to Reducer to display student data \r\n    dispatch(ac.fetchStudent(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}