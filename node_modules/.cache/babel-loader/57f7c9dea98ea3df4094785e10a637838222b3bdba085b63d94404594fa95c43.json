{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\incre\\\\OneDrive\\\\Documents\\\\Full Stack Project\\\\full-stack-project-frontend\\\\src\\\\components\\\\containers\\\\EditCampusContainer.js\";\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { editCampusThunk, fetchCampusThunk } from '../../store/thunks';\nimport EditCampusView from '../views/EditCampusView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EditCampusContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      if (event.target.name === \"imageurl\") {\n        this.setState({\n          [event.target.name]: event.target.value,\n          tempurl: event.target.value\n        });\n      } else {\n        this.setState({\n          [event.target.name]: event.target.value\n        });\n      }\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault(); // Prevent browser reload/refresh after submit.\n      if (this.state.name === \"\" || this.state.address === \"\" || this.state.description === \"\") {\n        alert(\"Missing Information\");\n        return;\n      }\n      console.log(this.state);\n      console.log(this.props);\n      let campus = {\n        name: this.state.name,\n        imageurl: this.state.imageurl,\n        address: this.state.address,\n        description: this.state.description,\n        id: this.props.campus.id\n      };\n      await this.props.editCampus(campus);\n\n      // Update state, and trigger redirect to show the new campus\n      this.setState({\n        name: \"\",\n        imageurl: \"\",\n        address: \"\",\n        description: \"\",\n        id: null,\n        redirect: true,\n        redirectId: this.props.campus.id\n      });\n    };\n    console.log(props.campus);\n    this.state = {\n      name: this.props.campus.name,\n      imageurl: this.props.campus.imageurl,\n      address: this.props.campus.address,\n      description: this.props.campus.description,\n      id: this.props.campus.id,\n      redirect: false,\n      redirectId: null,\n      tempurl: this.props.campus.imageurl\n    };\n  }\n  // componentDidMount() {\n  //     // Get campus ID from URL (API link)\n  //     this.props.fetchCampus(this.props.match.params.id);\n\n  // }\n  async componentDidMount() {\n    try {\n      await this.props.fetchCampus(this.props.match.params.id);\n      console.log(this.props.campus);\n    } catch (error) {\n      console.error(\"Error fetching campuses:\", error);\n    }\n  }\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n  render() {\n    // Redirect to student's page after submit\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/campus/${this.props.campus.id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }, this);\n    }\n\n    // Display the input form via the corresponding View component\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditCampusView, {\n        campus: this.props.campus,\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        tempurl: this.state.tempurl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this);\n  }\n}\nconst mapDispatch = dispatch => {\n  return {\n    editCampus: campus => dispatch(editCampusThunk(campus)),\n    fetchCampus: id => dispatch(fetchCampusThunk(id))\n  };\n};\nconst mapState = state => {\n  return {\n    campus: state.campus\n  };\n};\nexport default connect(mapState, mapDispatch)(EditCampusContainer);","map":{"version":3,"names":["Header","Component","connect","Redirect","editCampusThunk","fetchCampusThunk","EditCampusView","jsxDEV","_jsxDEV","EditCampusContainer","constructor","props","handleChange","event","target","name","setState","value","tempurl","handleSubmit","preventDefault","state","address","description","alert","console","log","campus","imageurl","id","editCampus","redirect","redirectId","componentDidMount","fetchCampus","match","params","error","componentWillUnmount","render","to","fileName","_jsxFileName","lineNumber","columnNumber","children","mapDispatch","dispatch","mapState"],"sources":["C:/Users/incre/OneDrive/Documents/Full Stack Project/full-stack-project-frontend/src/components/containers/EditCampusContainer.js"],"sourcesContent":["import Header from './Header';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { editCampusThunk, fetchCampusThunk } from '../../store/thunks';\r\n\r\nimport EditCampusView from '../views/EditCampusView';\r\n\r\nclass EditCampusContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        console.log(props.campus);\r\n        this.state = {\r\n            name: this.props.campus.name, \r\n            imageurl: this.props.campus.imageurl, \r\n            address: this.props.campus.address, \r\n            description: this.props.campus.description,\r\n            id: this.props.campus.id,\r\n            redirect: false, \r\n            redirectId: null,\r\n            tempurl: this.props.campus.imageurl,\r\n        };\r\n    }\r\n    \r\n    handleChange = event => {\r\n        if(event.target.name === \"imageurl\"){ \r\n            this.setState({\r\n                [event.target.name]: event.target.value,\r\n                tempurl: event.target.value\r\n            })\r\n        }else{\r\n            this.setState({\r\n                [event.target.name]: event.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     // Get campus ID from URL (API link)\r\n    //     this.props.fetchCampus(this.props.match.params.id);\r\n    \r\n    // }\r\n    async componentDidMount() {\r\n        try {\r\n            await this.props.fetchCampus(this.props.match.params.id);\r\n            console.log(this.props.campus);\r\n        } catch (error) {\r\n            console.error(\"Error fetching campuses:\", error);\r\n        }\r\n    }\r\n    handleSubmit = async event => {\r\n        event.preventDefault();  // Prevent browser reload/refresh after submit.\r\n        if(this.state.name === \"\" || this.state.address === \"\" || this.state.description === \"\") {\r\n            alert(\"Missing Information\");\r\n            return;\r\n        }\r\n        console.log(this.state);\r\n        console.log(this.props);\r\n        let campus = {\r\n            name: this.state.name,\r\n            imageurl: this.state.imageurl,\r\n            address: this.state.address,\r\n            description: this.state.description,\r\n            id: this.props.campus.id,\r\n        };\r\n        \r\n        await this.props.editCampus(campus);\r\n    \r\n        // Update state, and trigger redirect to show the new campus\r\n        this.setState({\r\n          name: \"\", \r\n          imageurl: \"\", \r\n          address: \"\", \r\n          description: \"\",\r\n          id: null,\r\n          redirect: true, \r\n          redirectId: this.props.campus.id,\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({redirect: false, redirectId: null});\r\n    }\r\n\r\n    render() {\r\n        // Redirect to student's page after submit\r\n        if(this.state.redirect) {\r\n          return (<Redirect to={`/campus/${this.props.campus.id}`}/>)\r\n        }\r\n    \r\n        // Display the input form via the corresponding View component\r\n        return (\r\n          <div>\r\n            <Header />\r\n            <EditCampusView \r\n              campus = {this.props.campus}\r\n              handleChange = {this.handleChange} \r\n              handleSubmit={this.handleSubmit}    \r\n              tempurl={this.state.tempurl}\r\n            />\r\n          </div>          \r\n        );\r\n      }\r\n}\r\n\r\nconst mapDispatch = (dispatch) => {\r\n    return({\r\n        editCampus: (campus) => dispatch(editCampusThunk(campus)),\r\n        fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\r\n    })\r\n}\r\n\r\nconst mapState = (state) => {\r\n    return {\r\n      campus: state.campus,  \r\n    };\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(EditCampusContainer);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}