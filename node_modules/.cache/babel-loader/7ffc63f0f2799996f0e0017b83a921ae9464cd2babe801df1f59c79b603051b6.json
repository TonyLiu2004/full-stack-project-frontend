{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\incre\\\\OneDrive\\\\Documents\\\\Full Stack Project\\\\full-stack-project-frontend\\\\src\\\\components\\\\containers\\\\NewCampusContainer.js\";\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport NewCampusView from '../views/NewCampusView';\nimport { addCampusThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass NewCampusContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    this.checkImageUrlValidity = async imageUrl => {\n      const img = new Image();\n      img.src = imageUrl;\n      return img.complete && img.naturalWidth !== 0;\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault(); // Prevent browser reload/refresh after submit.\n      console.log(this.state.imageurl);\n      if (this.state.name === \"\" || this.state.imageurl === \"\" || !this.checkImageUrlValidity(this.state.imageurl) || this.state.address === \"\" || this.state.description === \"\") {\n        alert(\"Invalid input\");\n        return;\n      }\n      let campus = {\n        name: this.state.name,\n        imageurl: this.state.imageurl,\n        address: this.state.address,\n        description: this.state.description\n      };\n\n      // Add new campus in back-end database\n      let newCampus = await this.props.addCampus(campus);\n\n      // Update state, and trigger redirect to show the new campus\n      this.setState({\n        name: \"\",\n        imageurl: \"\",\n        address: \"\",\n        description: \"\",\n        redirect: true,\n        redirectId: newCampus.id\n      });\n    };\n    this.state = {\n      name: \"\",\n      imageurl: \"\",\n      address: \"\",\n      description: \"\",\n      redirect: false,\n      redirectId: null\n    };\n  }\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n  render() {\n    // Redirect to new student's page after submit\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/campus/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }, this);\n    }\n\n    // Display the input form via the corresponding View component\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(NewCampusView, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this);\n  }\n}\nconst mapDispatch = dispatch => {\n  return {\n    addCampus: campus => dispatch(addCampusThunk(campus))\n  };\n};\nexport default connect(null, mapDispatch)(NewCampusContainer);","map":{"version":3,"names":["Header","Component","connect","Redirect","NewCampusView","addCampusThunk","jsxDEV","_jsxDEV","NewCampusContainer","constructor","props","handleChange","event","setState","target","name","value","checkImageUrlValidity","imageUrl","img","Image","src","complete","naturalWidth","handleSubmit","preventDefault","console","log","state","imageurl","address","description","alert","campus","newCampus","addCampus","redirect","redirectId","id","componentWillUnmount","render","to","fileName","_jsxFileName","lineNumber","columnNumber","children","mapDispatch","dispatch"],"sources":["C:/Users/incre/OneDrive/Documents/Full Stack Project/full-stack-project-frontend/src/components/containers/NewCampusContainer.js"],"sourcesContent":["import Header from './Header';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport NewCampusView from '../views/NewCampusView';\r\nimport { addCampusThunk } from '../../store/thunks';\r\n\r\nclass NewCampusContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: \"\", \r\n            imageurl: \"\", \r\n            address: \"\", \r\n            description: \"\",\r\n            redirect: false, \r\n            redirectId: null\r\n        };\r\n    }\r\n    \r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    checkImageUrlValidity = async (imageUrl) => {\r\n        const img = new Image();\r\n        img.src = imageUrl;\r\n        return img.complete && img.naturalWidth !== 0;\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();  // Prevent browser reload/refresh after submit.\r\n        console.log(this.state.imageurl);\r\n        if(this.state.name === \"\" || this.state.imageurl === \"\" || !this.checkImageUrlValidity(this.state.imageurl) || this.state.address === \"\" || this.state.description === \"\") {\r\n            alert(\"Invalid input\");\r\n            return;\r\n        }\r\n        let campus = {\r\n            name: this.state.name,\r\n            imageurl: this.state.imageurl,\r\n            address: this.state.address,\r\n            description: this.state.description\r\n        };\r\n        \r\n        // Add new campus in back-end database\r\n        let newCampus = await this.props.addCampus(campus);\r\n    \r\n        // Update state, and trigger redirect to show the new campus\r\n        this.setState({\r\n          name: \"\", \r\n          imageurl: \"\", \r\n          address: \"\", \r\n          description: \"\",\r\n          redirect: true, \r\n          redirectId: newCampus.id\r\n        });\r\n    }\r\n    componentWillUnmount() {\r\n        this.setState({redirect: false, redirectId: null});\r\n    }\r\n    render() {\r\n        // Redirect to new student's page after submit\r\n        if(this.state.redirect) {\r\n          return (<Redirect to={`/campus/${this.state.redirectId}`}/>)\r\n        }\r\n    \r\n        // Display the input form via the corresponding View component\r\n        return (\r\n          <div>\r\n            <Header />\r\n            <NewCampusView \r\n              handleChange = {this.handleChange} \r\n              handleSubmit={this.handleSubmit}      \r\n            />\r\n          </div>          \r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatch = (dispatch) => {\r\n    return({\r\n        addCampus: (campus) => dispatch(addCampusThunk(campus)),\r\n    })\r\n}\r\n\r\nexport default connect(null, mapDispatch)(NewCampusContainer);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}