{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\incre\\\\OneDrive\\\\Documents\\\\Full Stack Project\\\\full-stack-project-frontend\\\\src\\\\components\\\\containers\\\\NewCampusContainer.js\";\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport NewCampusView from '../views/NewCampusView';\nimport { addCampusThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass NewCampusContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      if (event.target.name === \"imageurl\") {\n        this.setState({\n          [event.target.name]: event.target.value,\n          tempurl: event.target.value\n        });\n      } else {\n        this.setState({\n          [event.target.name]: event.target.value\n        });\n      }\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault(); // Prevent browser reload/refresh after submit.\n      if (this.state.name === \"\" || this.state.address === \"\" || this.state.description === \"\") {\n        alert(\"Missing Information\");\n        return;\n      }\n      let campus = {\n        name: this.state.name,\n        imageurl: this.state.imageurl,\n        address: this.state.address,\n        description: this.state.description\n      };\n\n      // Add new campus in back-end database\n      let newCampus = await this.props.addCampus(campus);\n\n      // Update state, and trigger redirect to show the new campus\n      this.setState({\n        name: \"\",\n        imageurl: \"\",\n        address: \"\",\n        description: \"\",\n        redirect: true,\n        redirectId: newCampus.id\n      });\n    };\n    this.state = {\n      name: \"\",\n      imageurl: \"\",\n      address: \"\",\n      description: \"\",\n      redirect: false,\n      redirectId: null,\n      tempurl: \"\"\n    };\n  }\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n  render() {\n    // Redirect to new student's page after submit\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/campus/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }, this);\n    }\n\n    // Display the input form via the corresponding View component\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(NewCampusView, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        tempurl: this.state.tempurl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this);\n  }\n}\nconst mapDispatch = dispatch => {\n  return {\n    addCampus: campus => dispatch(addCampusThunk(campus))\n  };\n};\nexport default connect(null, mapDispatch)(NewCampusContainer);","map":{"version":3,"names":["Header","Component","connect","Redirect","NewCampusView","addCampusThunk","jsxDEV","_jsxDEV","NewCampusContainer","constructor","props","handleChange","event","target","name","setState","value","tempurl","handleSubmit","preventDefault","state","address","description","alert","campus","imageurl","newCampus","addCampus","redirect","redirectId","id","componentWillUnmount","render","to","fileName","_jsxFileName","lineNumber","columnNumber","children","mapDispatch","dispatch"],"sources":["C:/Users/incre/OneDrive/Documents/Full Stack Project/full-stack-project-frontend/src/components/containers/NewCampusContainer.js"],"sourcesContent":["import Header from './Header';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport NewCampusView from '../views/NewCampusView';\r\nimport { addCampusThunk } from '../../store/thunks';\r\n\r\nclass NewCampusContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: \"\", \r\n            imageurl: \"\", \r\n            address: \"\", \r\n            description: \"\",\r\n            redirect: false, \r\n            redirectId: null,\r\n            tempurl: \"\",\r\n        };\r\n    }\r\n    \r\n    handleChange = event => {\r\n        if(event.target.name === \"imageurl\"){ \r\n            this.setState({\r\n                [event.target.name]: event.target.value,\r\n                tempurl: event.target.value\r\n            })\r\n        }else{\r\n            this.setState({\r\n                [event.target.name]: event.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();  // Prevent browser reload/refresh after submit.\r\n        if(this.state.name === \"\" || this.state.address === \"\" || this.state.description === \"\") {\r\n            alert(\"Missing Information\");\r\n            return;\r\n        }\r\n        let campus = {\r\n            name: this.state.name,\r\n            imageurl: this.state.imageurl,\r\n            address: this.state.address,\r\n            description: this.state.description\r\n        };\r\n        \r\n        // Add new campus in back-end database\r\n        let newCampus = await this.props.addCampus(campus);\r\n    \r\n        // Update state, and trigger redirect to show the new campus\r\n        this.setState({\r\n          name: \"\", \r\n          imageurl: \"\", \r\n          address: \"\", \r\n          description: \"\",\r\n          redirect: true, \r\n          redirectId: newCampus.id\r\n        });\r\n    }\r\n    componentWillUnmount() {\r\n        this.setState({redirect: false, redirectId: null});\r\n    }\r\n    render() {\r\n        // Redirect to new student's page after submit\r\n        if(this.state.redirect) {\r\n          return (<Redirect to={`/campus/${this.state.redirectId}`}/>)\r\n        }\r\n    \r\n        // Display the input form via the corresponding View component\r\n        return (\r\n          <div>\r\n            <Header />\r\n            <NewCampusView \r\n              handleChange = {this.handleChange} \r\n              handleSubmit={this.handleSubmit}   \r\n              tempurl={this.state.tempurl}   \r\n            />\r\n          </div>          \r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatch = (dispatch) => {\r\n    return({\r\n        addCampus: (campus) => dispatch(addCampusThunk(campus)),\r\n    })\r\n}\r\n\r\nexport default connect(null, mapDispatch)(NewCampusContainer);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}