{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\incre\\\\OneDrive\\\\Documents\\\\Full Stack Project\\\\full-stack-project-frontend\\\\src\\\\components\\\\containers\\\\EditStudentContainer.js\";\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditStudentView from '../views/EditStudentView';\nimport { editStudentThunk, fetchAllCampusesThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EditStudentContainer extends Component {\n  constructor(props) {\n    super(props);\n    // Capture input data when it is entered\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault(); // Prevent browser reload/refresh after submit.\n\n      if (this.state.firstname === \"\" || this.state.lastname === \"\") {\n        alert(\"Missing Information\");\n        return;\n      }\n      let student = {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        campusId: this.state.campusId\n      };\n      let editStudent = await this.props.editStudent(student);\n      this.setState({\n        firstname: \"\",\n        lastname: \"\",\n        campusId: null,\n        redirect: true,\n        redirectId: editStudent.id\n      });\n    };\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      campusId: null,\n      redirect: false,\n      redirectId: null\n    };\n  }\n  async componentDidMount() {\n    try {\n      await this.props.fetchAllCampuses();\n      console.log(\"fetchAllCampuses completed\");\n      console.log(this.props);\n    } catch (error) {\n      console.error(\"Error fetching campuses:\", error);\n    }\n  }\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n  render() {\n    // Redirect to student's page after submit\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/student/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }, this);\n    }\n\n    // Display the input form via the corresponding View component\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditStudentView, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        campuses: this.props.allCampuses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this);\n  }\n}\nconsole.log(\"q2we\");\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\n    editStudent: student => dispatch(editStudentThunk(student))\n  };\n};\nconst mapStateToProps = state => ({\n  allCampuses: state.allCampuses // Adjust based on your Redux state structure\n});\nexport default connect(mapStateToProps, mapDispatch)(EditStudentContainer);","map":{"version":3,"names":["Header","Component","connect","Redirect","EditStudentView","editStudentThunk","fetchAllCampusesThunk","jsxDEV","_jsxDEV","EditStudentContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","state","firstname","lastname","alert","student","campusId","editStudent","redirect","redirectId","id","componentDidMount","fetchAllCampuses","console","log","error","componentWillUnmount","render","to","fileName","_jsxFileName","lineNumber","columnNumber","children","campuses","allCampuses","mapDispatch","dispatch","mapStateToProps"],"sources":["C:/Users/incre/OneDrive/Documents/Full Stack Project/full-stack-project-frontend/src/components/containers/EditStudentContainer.js"],"sourcesContent":["import Header from './Header';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport EditStudentView from '../views/EditStudentView';\r\nimport { editStudentThunk, fetchAllCampusesThunk } from '../../store/thunks';\r\n\r\nclass EditStudentContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            firstname: \"\", \r\n            lastname: \"\", \r\n            campusId: null, \r\n            redirect: false, \r\n            redirectId: null\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            await this.props.fetchAllCampuses();\r\n            console.log(\"fetchAllCampuses completed\");\r\n            console.log(this.props);\r\n        } catch (error) {\r\n            console.error(\"Error fetching campuses:\", error);\r\n        }\r\n    }\r\n\r\n    // Capture input data when it is entered\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    handleSubmit = async event => {\r\n        event.preventDefault();  // Prevent browser reload/refresh after submit.\r\n    \r\n        if(this.state.firstname === \"\" || this.state.lastname === \"\") {\r\n          alert(\"Missing Information\");\r\n          return;\r\n        }\r\n    \r\n        let student = {\r\n            firstname: this.state.firstname,\r\n            lastname: this.state.lastname,\r\n            campusId: this.state.campusId\r\n    };\r\n\r\n    let editStudent = await this.props.editStudent(student);\r\n    this.setState({\r\n        firstname: \"\", \r\n        lastname: \"\", \r\n        campusId: null, \r\n        redirect: true, \r\n        redirectId: editStudent.id\r\n      });\r\n    }\r\n    componentWillUnmount() {\r\n        this.setState({redirect: false, redirectId: null});\r\n    }\r\n    render() {\r\n        // Redirect to student's page after submit\r\n        if(this.state.redirect) {\r\n          return (<Redirect to={`/student/${this.state.redirectId}`}/>)\r\n        }\r\n    \r\n        // Display the input form via the corresponding View component\r\n        return (\r\n          <div>\r\n            <Header />\r\n            <EditStudentView \r\n              handleChange = {this.handleChange} \r\n              handleSubmit={this.handleSubmit}    \r\n              campuses={this.props.allCampuses} \r\n            />\r\n          </div>          \r\n        );\r\n      }\r\n}\r\nconsole.log(\"q2we\");\r\n\r\nconst mapDispatch = (dispatch) => {\r\n    return({\r\n        fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\r\n        editStudent: (student) => dispatch(editStudentThunk(student)),\r\n    })\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    allCampuses: state.allCampuses, // Adjust based on your Redux state structure\r\n  });\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(EditStudentContainer);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}